AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation setup for MLProjectPipeline, MLCloudFormationPipeline, and API Gateway integration.

Parameters:
  GitHubOwner:
    Type: String
    Default: rishichauhan193
  GitHubRepo:
    Type: String
    Default: ML-Project
  GitHubBranch:
    Type: String
    Default: main
  GitHubOAuthToken:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /github/oauth/token

Resources:
  # **S3 Bucket for Lambda Artifacts**
  LambdaArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ml-project-artifacts-${AWS::AccountId}"

  # **IAM Role for MLProjectPipeline**
  MLProjectPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MLProjectPipelinePermissions
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::ml-project-artifacts-${AWS::AccountId}/*"

  # **IAM Role for Lambda Execution**
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPermissions
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - lambda:InvokeFunction
                Resource: "*"

  # **MLProcessingLambda Function**
  MLProcessingLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MLProcessingLambda
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaArtifactBucket
        S3Key: lambda_package.zip

  # **API Gateway Setup**
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MLProcessingApi
      Description: API Gateway for ML Processing Lambda

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: mlprocess

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - { LambdaArn: !GetAtt MLProcessingLambda.Arn }

  LambdaApiInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MLProcessingLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/POST/mlprocess"

  # **CodePipeline for ML Project**
  MLProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MLProjectPipeline
      RoleArn: !GetAtt MLProjectPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceFetch
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: BuildLambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: MLProjectCodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: UploadToS3
          Actions:
            - Name: UploadArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                BucketName: !Ref LambdaArtifactBucket
                Extract: false
                ObjectKey: lambda_package.zip
              InputArtifacts:
                - Name: BuildArtifact

  # **CodePipeline for Lambda Deployment**
  MLCloudFormationPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MLCloudFormationPipeline
      RoleArn: !GetAtt MLCloudFormationPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: FetchArtifact
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                BucketName: !Ref LambdaArtifactBucket
                Extract: false
                ObjectKey: lambda_package.zip
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Deploy
          Actions:
            - Name: DeployLambda
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: !Ref MLProcessingLambda
                S3Bucket: !Ref LambdaArtifactBucket
                S3Key: lambda_package.zip

Outputs:
  ApiEndpoint:
    Description: "API Gateway Endpoint for ML Processing"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/mlprocess"
  MLProcessingLambdaARN:
    Description: "ARN of the deployed Lambda function"
    Value: !GetAtt MLProcessingLambda.Arn
  MLProjectPipelineName:
    Description: "Name of MLProjectPipeline"
    Value: !Ref MLProjectPipeline
  MLCloudFormationPipelineName:
    Description: "Name of MLCloudFormationPipeline"
    Value: !Ref MLCloudFormationPipeline
